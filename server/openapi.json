{
  "openapi": "3.0.0",
  "info": {
    "title": "Vieva_Connect",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "tags": [
    {
      "name": "Authentification",
      "description": "authentification et creation d'utilisateurs"
    },
    {
      "name": "Profil",
      "description": "Information de l'utilisateur"
    }
  ],
  "paths": {
    "/api/login": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "summary": "Connexion a l'application",
        "description": "Connexion en utilisant l'email et le mot de passe",
        "operationId": "loginUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response. Creation d'un cookie contenant le token",
            "content": {
              "application/json": {}
            },
            "headers": {
              "Set-Cookie": {
                "description": "Cookie containing the JWT token.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "User not found",
            "content": {
              "application/json": {}
            }
          },
          "401": {
            "description": "Invalid  password",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/create": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "summary": "Creation d'un nouvel utilisateur",
        "description": "Enregistrement d'un nouvel utilisateur dans la base de données",
        "operationId": "createUser",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Create"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Create"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Create"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response. Creation d'un cookie contenant le token",
            "content": {
              "application/json": {}
            },
            "headers": {
              "Set-Cookie": {
                "description": "Cookie containing the JWT token.",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "User already exists",
            "content": {
              "application/json": {}
            }
          },
          "422": {
            "description": "Invalid input",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/profile/{userId}": {
      "get": {
        "tags": [
          "Profil"
        ],
        "summary": "Trouve un utilisateur par son Id",
        "description": "Retourne un seul profil",
        "operationId": "profilUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id d'un utilisateur",
            "required": true,
            "schema": {
              "type": "string",
              "format": "hexadecimal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Profil"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": " Internal Server Error",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/logout": {
      "get": {
        "tags": [
          "Authentification"
        ],
        "summary": "Déconnexion de l'application",
        "description": "Déconnexion ",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "default": {
            "description": "Successful operation. Suppression du cookie"
          }
        }
      }
    },
    "/api/verify_user": {
      "post": {
        "tags": [
          "Authentification"
        ],
        "summary": "Vérification de l'utilisateur pour ConnectyCube",
        "description": "",
        "operationId": "verifyUser",
        "parameters": [
          {
            "name": "token",
            "description": "Verification avec renvoie d'une reponse",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody":{
          "content":{
            "application/json":{
              "schema":{
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2NjI5MTk3Y2QzNWYwM2U0NzQ2YjYxZDgiLCJpYXQiOjE3MTQzODI5NDh9.bMDCQ0UGdBCsywjya3C-jGlnpBh5IyqnctgSWVpwR0c"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Verify_user"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Base": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "example": "Durand"
          },
          "prenom": {
            "type": "string",
            "example": "Alain"
          },
          "adresse": {
            "type": "string",
            "example": "20 rue du coq"
          },
          "telephone": {
            "type": "string",
            "example": "0123456789"
          },
          "email": {
            "type": "string",
            "example": "azerty@g.com"
          }
        }
      },
      "Profil": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Base"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "hexadecimal",
                "example": "65e9a57ab9a7b2d954b057c9"
              }
            }
          }
        ]
      },
      "Create": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Base"
          },
          {
            "type": "object",
            "properties": {
              "mdp": {
                "type": "string",
                "example": "azerty2024"
              }
            }
          }
        ]
      },
      "Login": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "azerty@g.com"
          },
          "mdp": {
            "type": "string",
            "example": "azerty2024"
          }
        }
      },
      "Verify_user": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "hexadecimal",
            "example": "65e9a57ab9a7b2d954b057c9"
          }
        }
      }
    }
  }
}
